#!/usr/bin/env -S clojure -A:tools.build -J-Dclojure.main.report=stderr -M

(require
 '[lambdaisland.cli :as cli]
 '[clojure.tools.build.api :as build]
 '[org.corfield.log4j2-conflict-handler :refer [log4j2-conflict-handler]])

(def init {})

(defn initialize-local-files
  "Create local files which are not checked in"
  [_]
  (spit "deps.local.edn" "{:launchpad/aliases [:dev]}"))

(defn uberjar
  "Build uberjar"
  {:flags ["--target-dir" {:doc "Target directory" :default "target"}]}
  [{:keys [target-dir]}]
  (let [basis (build/create-basis {:project "deps.edn"})]
    (build/copy-dir {:src-dirs   ["resources"]
                     :target-dir target-dir})
    (build/compile-clj {:basis     basis
                        :src-dirs  ["src"]
                        :class-dir target-dir
                        :compile-opts {:elide-meta [:doc]}})
    (build/uber {:class-dir target-dir
                 :uber-file (str target-dir "/oak-uberjar.jar")
                 :basis     basis
                 :main      'co.gaiwan.oak
                 :conflict-handlers log4j2-conflict-handler})))

(def commands
  ["init" #'initialize-local-files
   "uberjar" #'uberjar])

(def flags
  ["-v, --verbose"
   "Increase verbosity"
   "-h, --help"
   "Show help text for a (sub-)command"])

(cli/dispatch*
 {:name "bin/dev"
  :init init
  :flags flags
  :commands commands})

;; Local Variables:
;; mode:clojure
;; End:
